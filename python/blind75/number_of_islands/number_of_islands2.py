def numIslands(grid: 'list[list[str]]') -> int:
    rows = len(grid)
    cols = len(grid[0])

    visited = set()
    islands = 0

    def dfs(r,c):
        if (r,c) not in visited and 0 <= r < rows and 0 <= c < cols and grid[r][c] == "1":
            visited.add((r,c))

            dfs(r+1,c)
            dfs(r-1,c)
            dfs(r,c+1)
            dfs(r,c-1)
        return


    for r in range(rows):
        for c in range(cols):
            if (r,c) not in visited and grid[r][c] == "1":
                islands += 1

                dfs(r,c)
        
    return islands

print(numIslands([
["1","1","1","1","0"],
["1","1","0","1","0"],
["1","1","0","0","0"],
["0","0","0","0","0"]]))

print(numIslands([
    ["1","1","1"],
    ["0","1","0"],
    ["1","1","1"]]))

print(numIslands([
    ["1","0","1","1","1"],
    ["1","0","1","0","1"],
    ["1","1","1","0","1"]]))

# (0,6)(4,2)(4,7)
print(numIslands([
    ["1","1","1","1","1","0","1","1","1","1"],
    ["1","0","1","0","1","1","1","1","1","1"],
    ["0","1","1","1","0","1","1","1","1","1"],
    ["1","1","0","1","1","0","0","0","0","1"],
    ["1","0","1","0","1","0","0","1","0","1"],
    ["1","0","0","1","1","1","0","1","0","0"],
    ["0","0","1","0","0","1","1","1","1","0"],
    ["1","0","1","1","1","0","0","1","1","1"],
    ["1","1","1","1","1","1","1","1","0","1"],
    ["1","0","1","1","1","1","1","1","1","0"]]))